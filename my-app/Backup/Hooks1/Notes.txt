Hooks is used in functional component 

We can update the state value in hooks...

Hooks is like props only

-------------
Why Hooks?
Bcaz it can update the state values
It avoids changing in environment

------------
Hooks basically defines as destructured array
Ex: const [arr, setArr]= useStte()
-----------
Rules:
1. Only call the hooks at the top level
2. Only call hook sfrom the react functions
****************************************************************************
1. useState()
it lets us to add state to functional components
-> IN class the state always an object. But in functional it can be object array number string boolean
Ex: const [count,setCount]= useState()
=> use spread operator for get the rest of the data in the object
=> It returns tow elements
 -> 1. value
 -> 2. Setter Function

******************************************************************************
2. useEffect()

Consider updating the doc title to the current counter value
Ex: in class,
    componentDidMount(){
        doc.title = `You clicked ${this.state.count} times`
    }
    componentDidUpdate(){
        doc.title = `You clicked ${this.state.count} times`
    }
In class component We have component life cycle like Componentdidupdate, componentwillmount, componentwillunmount and so on
We can use "useEffect() " hook to avoid the above side effects
-> We can perform entire Component Life Cycle in the useEffect() Hook

Proper Explanantion of useEffect():
-> 1. This lets you perform side effects in functioal components
-> 2. It is close replacemnet for the componentdidmount, componentwillmount, componentwillunmount

useEffect() takes an argument.
it executes after render method is executed
it runs after every render of the component

for conditionally executing an effecting we use one extra dependencies like one array
Ex: useEffect(()=>{

},[])

inordeer to conditionally ru specify the second parameterr as array

---> Run effects only once
--> The cleanup code cancelling subscription --> use return and remove

---> If youu want to watch the variable add it to the dependecies []
---> If you want to use the function within useEffect(), Just define the function within useEffect()

******************************************************************************************************************

3. useContext()

What is react context?
--->Context provides a way to pass data throught the componenet treee without having to pass props down manually at every level
    (If we have nested component , and we need to share the details of one component to another component we use the props method,
     But instead of props method we can use useContext() Hook)

3 steps to implement context...
1--> Create a context in the app component    
Why react context?

How context hook works in react?